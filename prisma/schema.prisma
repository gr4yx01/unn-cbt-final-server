// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExamType {
  MULTIPLE_CHOICE
  TRUE_FALSE
}

model Option {
  id      String @id @default(cuid())
  text   String
  question Question @relation(fields: [questionId], references: [id])
  questionId String
}

model Question {
  id      String   @id @default(cuid())
  title   String
  options Option[]
  answer String
  exam    Exam     @relation(fields: [examId], references: [id])
  examId  String
}

model Exam{
  id          String    @id @default(cuid())
  title       String
  description String
  duration    Int
  noOfQuestions Int     @default(0)
  exam_code   Int       @default(0)
  Examiner    Examiner  @relation(fields: [ExaminerId], references: [id])
  ExaminerId  String
  examType    ExamType
  questions   Question[]
  User User[]
  ExamTaken ExamTaken[]
}

model Examiner {
  id       String @id @default(cuid())
  name     String
  department  String
  staff_code String @unique
  exams    Exam[]
}

model User {
  id       String @id @default(cuid())
  registration_number    String @unique
  name   String
  password String
  exams    Exam[]
  ExamTaken ExamTaken[]
}

model ExamTaken {
  id       String @id @default(cuid())
  score    Int
  user     User @relation(fields: [userId], references: [id])
  userId   String
  exam     Exam @relation(fields: [examId], references: [id])
  examId   String
  createdAt DateTime @default(now())
}